""" Ellipsis-Ramanujan.py
    MFH, 12.6.2024
    
    Exploring Ramanujan's approximate formulas for circomference of an ellipsis.

References:
https://fr.wikipedia.org/wiki/Ellipse_(math%C3%A9matiques)#Circonf%C3%A9rence
https://docs.sympy.org/latest/modules/functions/special.html#sympy.functions.special.elliptic_integrals.elliptic_e

    Recall:
    - area            A = 𝜋 𝑎 𝑏
    - circumference   C = 4 𝑎 E(e)
                        = 4 𝑎 \int_0^1 sqrt((1-e²u²)/(1-u²)) du
                        = 4 𝑎 \int_0^{pi/2} sqrt(1 - e² sin²t) dt
    * Ramanujan's 1st formula : C ≈ 𝜋 (𝑎 + 𝑏) (3 - sqrt(4-h))              
    * Ramanujan's 1st formula : C ≈ 𝜋 (𝑎 + 𝑏) (1 + 3h/(10 + sqrt(4-h)))
        
    h = (a-b)²/(a+b)² ; e = sqrt(a² - b²)/a

"""
from sympy import S, pi, sqrt, elliptic_e as E

def R1(a,b):
    h = (S(a-b)/(a+b))**2
    return pi*(a+b)*(3-sqrt(4-h))

def R2(a,b):
    h = (S(a-b)/(a+b))**2
    return pi*(a+b)*(1+3*h/(10+sqrt(4-h)))

def circumference(a,b):
    e = sqrt(a**2-b**2)/a
    return 4*a*E(e)

def compare(a,b):
    L = circumference(a,b); r1 = R1(a,b); r2 = R2(a,b))
    return [a, b, #L := circumference(a,b), r1 := R1(a,b), r2 := R2(a,b),
            L := L.n(), (r1-L).n()/L, (r2-L).n()/L]
if __name__=='__main__':
    for a in range(1,9):
        for b in range(1,a):
            print(compare(a,b))
""" Output:
[a, b, exact circumference, relat. error R1, relative error R2]
[2, 1, 9.05175233574422, 0.0703365203014828, 0.0702004098503878]
[3, 1, 12.8082615426930, 0.0434233984595748, 0.0427603667239320]
[3, 2, 14.5676986090524, 0.0890833206629556, 0.0890652439145755]
[4, 1, 16.6695731544792, 0.0291208883059717, 0.0277777710768911]
[4, 2, 18.1035046714884, 0.0703365203014828, 0.0702004098503878]
[4, 3, 20.2270292637467, 0.0927700505448540, 0.0927653196057148]
[5, 1, 20.5767288128329, 0.0208427418380026, 0.0188260118586700]
[5, 2, 21.8188610293507, 0.0547210637737139, 0.0543570906185586]
[5, 3, 23.5697984865568, 0.0830379567444361, 0.0829941688706467]
[5, 4, 25.9685607009383, 0.0921540131113195, 0.0921522813580422]
[6, 1, 24.5092299194351, 0.0156088588219609, 0.0129782296328773]
[6, 2, 25.6165230853861, 0.0434233984595748, 0.0427603667239320]
[6, 3, 27.1552570072327, 0.0703365203014829, 0.0702004098503878]
[6, 4, 29.1353972181049, 0.0890833206629556, 0.0890652439145755]
[6, 5, 31.7658574994022, 0.0901313128853237, 0.0901305379529214]
[7, 1, 28.4575237222351, 0.0120653714646546, 0.00889130177777970]
[7, 2, 29.4621413292151, 0.0352196077160332, 0.0342221679308824]
[7, 3, 30.8529205988593, 0.0593936368258356, 0.0591155974118265]
[7, 4, 32.6016542986149, 0.0797959131822455, 0.0797341557913372]
[7, 5, 34.7692065595184, 0.0918099975555288, 0.0918012472372130]
[7, 6, 37.6043699245896, 0.0876699219128987, 0.0876695254658137]
[8, 1, 32.4164335250730, 0.00953675983944207, 0.00588594414520964]
[8, 2, 33.3391463089584, 0.0291208883059717, 0.0277777710768911]
[8, 3, 34.6168172372260, 0.0505350638536860, 0.0500773102539450]
[8, 4, 36.2070093429769, 0.0703365203014828, 0.0702004098503878]
[8, 5, 38.1238959478719, 0.0855727774508356, 0.0855408822309592]
[8, 6, 40.4540585274934, 0.0927700505448540, 0.0927653196057148]
[8, 7, 43.4750112643890, 0.0851351813805229, 0.0851349582048977]
"""
# end of file
